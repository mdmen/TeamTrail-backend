generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator zod {
  provider         = "zod-prisma-types"
  output           = "./_generated/zod"
  useMultipleFiles = false
}

model User {
  id        String    @id @map("_id")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  /// @zod.string.email({ message: "Invalid email address" });
  email     String    @unique
  /// @zod.string.min(3, { message: "Username must be at least 3 characters long" }).max(50, { message: "Username must be up to 50 characters long" })
  username  String    @unique
  /// @zod.string.min(1, { message: "Name must be at least 1 character" }).max(100, { message: "Name must be up to 100 characters long" })
  name      String?
  /// @zod.string.min(3, { message: "Phone must be at least 3 character" }).max(30, { message: "Phone must be up to 30 characters long" })
  phone     String?
  image     String?
  location  Location?

  @@map("users")
}

// model Workspace {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   code      String   @default(cuid())
//   name      String
//   public    Boolean  @default(false)

//   @@map("workspaces")
// }

// model Task {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   code        String   @default(cuid())
//   title       String
//   description String

//   @@map("tasks")
// }

// model Issue {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   code        String   @default(cuid())
//   title       String
//   description String

//   @@map("issues")
// }

// model Board {
//   id    String @id @default(auto()) @map("_id") @db.ObjectId
//   title String
//   code  String

//   @@map("boards")
// }

// model Page {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String
//   code      String   @default(cuid())

//   @@map("pages")
// }

// // Issue/Task
// model Comment {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   text      String

//   @@map("comments")
// }

// // Chat
// model Message {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   text      String

//   @@map("messages")
// }

// enum Role {
//   Admin
//   Moderator
//   Member
// }

type Location {
  country String?
  city    String?
}
